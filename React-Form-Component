/*************************************************************************
 * For this script you need Axios library which makes using
 * AJAX a lot easier.
 *
 *Using npm:
 *$ npm install axios
 *
 *Using bower:
 *$ bower install axios
 *
 *Using cdn:
 *<script src="https://unpkg.com/axios/dist/axios.min.js"></script>
 *************************************************************************/


// Card Component
const Card = (props) => {
	return(
  	<div style={{margin: '1em'}}>
      <img width="75" src={props.avatar_url} />
      <div style={{display: 'inline-block', marginLeft: 10}}>
        <div style={{fontSize: '1.25em', fontWeight:'bold'}}> {props.name} </div>
        <div> {props.company} </div>
      </div>
    </div>
  );
};

// Card List Component
const CardList = (props) => {
	return(
  	<div>
      {props.gitData.map( userData => <Card key={userData.id} {...userData} />)}
    </div>
  );
};

class Form extends React.Component {
	state = {
  	userName: ''
  };

	handleSubmit = (event) => {
  	// this prevents the reload of page, which may lead to loss of current data on screen
  	event.preventDefault();
    axios.get('https://api.github.com/users/' + this.state.userName).then( response => {
    this.props.onSubmit(response.data);
    this.setState({userName:''});
    });
  };
  
  render(){
  	return(
    	// Using DOM reference to get the props value
      // <form onSubmit={this.handleSubmit}>
    	// <input type="text" 
    	// ref={(input)=> this.userNameInput = input} placeholder="Github username" required/>
    	// <button type="submit">Add card</button>
    	// </form>
      
      // Using React itself to create manage property
      <form onSubmit={this.handleSubmit}>
        <input type="text" 
        value={this.state.userName} onChange={(event) => this.setState({userName : event.target.value})} placeholder="Github username" required/>
        <button type="submit">Add card</button>
    	</form>
    );
  }
}

class App extends React.Component{
	state={
  	// Card List Data
    cards: []
	};
	
  addNewCard = (cardInfo) => {
  	this.setState( prevState => ({
    	cards : prevState.cards.concat(cardInfo)
    }));
  }
  
  render(){
      return(
        <div>
          <Form onSubmit={this.addNewCard} />
          <CardList gitData= {this.state.cards} />
        </div>
      );
    } 
}

ReactDOM.render(<App />, mountNode);
